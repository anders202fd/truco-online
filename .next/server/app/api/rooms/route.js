"use strict";(()=>{var r={};r.id=696,r.ids=[696],r.modules={399:r=>{r.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:r=>{r.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},965:(r,e,o)=>{o.r(e),o.d(e,{originalPathname:()=>w,patchFetch:()=>O,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>R,staticGenerationAsyncStorage:()=>m});var a={};o.r(a),o.d(a,{GET:()=>d,POST:()=>E});var s=o(9303),t=o(8716),n=o(670),i=o(7070),u=o(7046),c=o(8990);async function d(){try{await (0,u.uD)();let r=await (0,c.A4)(20);return i.NextResponse.json({success:!0,data:r})}catch(r){return console.error("Erro ao buscar salas:",r),i.NextResponse.json({success:!1,error:"Erro interno do servidor"},{status:500})}}async function E(r){try{await (0,u.uD)();let{name:e,creatorId:o,betAmount:a,isPrivate:s}=await r.json();if(!e||!o||void 0===a)return i.NextResponse.json({success:!1,error:"Dados obrigat\xf3rios n\xe3o fornecidos"},{status:400});if(a<=0)return i.NextResponse.json({success:!1,error:"Valor da aposta deve ser maior que zero"},{status:400});let t=await (0,c.dB)(e,o,a,s);return i.NextResponse.json({success:!0,data:t},{status:201})}catch(r){return console.error("Erro ao criar sala:",r),i.NextResponse.json({success:!1,error:"Erro interno do servidor"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:t.x.APP_ROUTE,page:"/api/rooms/route",pathname:"/api/rooms",filename:"route",bundlePath:"app/api/rooms/route"},resolvedPagePath:"/workspaces/truco-online/src/app/api/rooms/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:R}=p,w="/api/rooms/route";function O(){return(0,n.patchFetch)({serverHooks:R,staticGenerationAsyncStorage:m})}},8990:(r,e,o)=>{o.d(e,{A4:()=>c,CX:()=>t,GA:()=>n,Ls:()=>E,_X:()=>l,dB:()=>u,k1:()=>p,r4:()=>s,ve:()=>m,wW:()=>d,yi:()=>i});var a=o(7046);let s=async(r,e,o)=>(await (0,a.IO)("INSERT INTO users (email, username, password_hash) VALUES ($1, $2, $3) RETURNING *",[r,e,o])).rows[0],t=async r=>(await (0,a.IO)("SELECT * FROM users WHERE email = $1",[r])).rows[0],n=async r=>(await (0,a.IO)("SELECT * FROM users WHERE id = $1",[r])).rows[0],i=async(r,e)=>(await (0,a.IO)("UPDATE users SET balance = $1 WHERE id = $2 RETURNING *",[e,r])).rows[0],u=async(r,e,o,s=!1)=>{let t=s?Math.random().toString(36).substring(2,8).toUpperCase():null;return(await (0,a.IO)("INSERT INTO rooms (name, creator_id, bet_amount, is_private, room_code) VALUES ($1, $2, $3, $4, $5) RETURNING *",[r,e,o,s,t])).rows[0]},c=async(r=20)=>(await (0,a.IO)("SELECT r.*, u.username as creator_username FROM rooms r JOIN users u ON r.creator_id = u.id WHERE r.status = $1 ORDER BY r.created_at DESC LIMIT $2",["waiting",r])).rows,d=async r=>(await (0,a.IO)("SELECT * FROM rooms WHERE id = $1",[r])).rows[0],E=async(r,e)=>{let o=await d(r);if(!o||o.current_players>=o.max_players)throw Error("Sala n\xe3o encontrada ou lotada");return await (0,a.IO)("INSERT INTO room_participants (room_id, user_id, position) VALUES ($1, $2, $3)",[r,e,o.current_players+1]),await (0,a.IO)("UPDATE rooms SET current_players = current_players + 1 WHERE id = $1",[r]),!0},p=async r=>(await (0,a.IO)("SELECT rp.*, u.username FROM room_participants rp JOIN users u ON rp.user_id = u.id WHERE rp.room_id = $1 ORDER BY rp.position",[r])).rows,l=async(r,e,o,s,t)=>(await (0,a.IO)("INSERT INTO transactions (user_id, type, amount, description, mercadopago_payment_id) VALUES ($1, $2, $3, $4, $5) RETURNING *",[r,e,o,s||null,t||null])).rows[0],m=async(r,e=50)=>(await (0,a.IO)("SELECT * FROM transactions WHERE user_id = $1 ORDER BY created_at DESC LIMIT $2",[r,e])).rows},7046:(r,e,o)=>{o.d(e,{IO:()=>n,uD:()=>t}),function(){var r=Error("Cannot find module 'pg'");throw r.code="MODULE_NOT_FOUND",r}();let a=process.env.DATABASE_URL;if(!a)throw Error("❌ DATABASE_URL n\xe3o foi definido no arquivo .env.local");let s=Object(function(){var r=Error("Cannot find module 'pg'");throw r.code="MODULE_NOT_FOUND",r}())({connectionString:a,ssl:{rejectUnauthorized:!1},max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3}),t=async()=>{try{let r=await s.connect();return console.log("✅ PostgreSQL conectado com sucesso!"),r.release(),s}catch(r){throw console.error("❌ Erro ao conectar ao PostgreSQL:",r),r}},n=async(r,e)=>{try{return await s.query(r,e)}catch(r){throw console.error("❌ Erro ao executar query:",r),r}}}};var e=require("../../../webpack-runtime.js");e.C(r);var o=r=>e(e.s=r),a=e.X(0,[948,972],()=>o(965));module.exports=a})();